{"ast":null,"code":"var _jsxFileName = \"/Users/crazydog/Desktop/Fridayz/frontend/src/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5050/api/posts\");\n      const postsWithBeans = await Promise.all(response.data.map(async post => {\n        const beansWithText = await Promise.all(post.beans.map(async beanId => {\n          const beanResponse = await axios.get(`http://localhost:5050/api/beans/${beanId}`);\n          return beanResponse.data;\n        }));\n        return {\n          ...post,\n          beans: beansWithText\n        };\n      }));\n      console.log(postsWithBeans);\n      setPosts(postsWithBeans);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(`http://localhost:5050/api/posts/${postId}/like`, {}, {\n        headers: {\n          Authorization: token\n        }\n      });\n      fetchPosts(); // Refresh posts after like\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleUnlike = async postId => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:5050/api/posts/${postId}/unlike`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      fetchPosts(); // Refresh posts after unlike\n    } catch (error) {\n      console.error(\"Error unliking post:\", error);\n    }\n  };\n  const handleAddComment = async (postId, comment) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(`http://localhost:5050/api/posts/${postId}/comments`, {\n        comment\n      }, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      fetchPosts(); // Refresh posts after adding comment\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-page\",\n    style: {\n      padding: \"20px\"\n    },\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentsSquare\",\n      style: {\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${post.username}`,\n          children: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: post.beans.map(bean => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"10px\",\n              borderBottom: \"1px solid #eee\",\n              paddingBottom: \"10px\"\n            },\n            children: [bean.time, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 31\n            }, this), bean.thought]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }, bean._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), \"Likes \", post.likes, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-container\",\n        children: [\"Comments:\", post.comments[0] && post.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: comment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLike(post._id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUnlike(post._id),\n          children: \"Unlike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddComment(post._id, \"New comment\"),\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","fetchPosts","response","get","postsWithBeans","Promise","all","data","map","post","beansWithText","beans","beanId","beanResponse","console","log","error","handleLike","postId","token","localStorage","getItem","headers","Authorization","handleUnlike","delete","handleAddComment","comment","className","style","padding","children","backgroundColor","borderRadius","boxShadow","marginBottom","content","fileName","_jsxFileName","lineNumber","columnNumber","to","username","bean","borderBottom","paddingBottom","time","thought","_id","likes","comments","index","onClick","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/crazydog/Desktop/Fridayz/frontend/src/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5050/api/posts\");\r\n      const postsWithBeans = await Promise.all(\r\n        response.data.map(async (post) => {\r\n          const beansWithText = await Promise.all(\r\n            post.beans.map(async (beanId) => {\r\n              const beanResponse = await axios.get(\r\n                `http://localhost:5050/api/beans/${beanId}`\r\n              );\r\n              return beanResponse.data;\r\n            })\r\n          );\r\n          return { ...post, beans: beansWithText };\r\n        })\r\n      );\r\n      console.log(postsWithBeans);\r\n      setPosts(postsWithBeans);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.post(\r\n        `http://localhost:5050/api/posts/${postId}/like`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        }\r\n      );\r\n      fetchPosts(); // Refresh posts after like\r\n    } catch (error) {\r\n      console.error(\"Error liking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUnlike = async (postId) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.delete(`http://localhost:5050/api/posts/${postId}/unlike`, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n      fetchPosts(); // Refresh posts after unlike\r\n    } catch (error) {\r\n      console.error(\"Error unliking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (postId, comment) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.post(\r\n        `http://localhost:5050/api/posts/${postId}/comments`,\r\n        { comment },\r\n        {\r\n          headers: {\r\n            Authorization: token,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      fetchPosts(); // Refresh posts after adding comment\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-page\" style={{ padding: \"20px\" }}>\r\n      {posts.map((post) => (\r\n        <div\r\n          key={post._id}\r\n          className=\"commentsSquare\"\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n        >\r\n          {/* Display post content */}\r\n          <div>{post.content}</div>\r\n          <h2>\r\n            <Link to={`/profile/${post.username}`}>{post.username}</Link>\r\n          </h2>\r\n          {/* Display beans associated with the post */}\r\n          <div>\r\n            {post.beans.map((bean) => (\r\n              <div key={bean._id}>\r\n                {/* {bean.type === \"text\" ? ( */}\r\n                <div\r\n                  style={{\r\n                    marginBottom: \"10px\",\r\n                    borderBottom: \"1px solid #eee\",\r\n                    paddingBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  {bean.time} <br />\r\n                  {bean.thought}\r\n                </div>\r\n                {/* ) : (\r\n                  <img src={bean.content} alt=\"Uploaded\" style={{ maxWidth: \"100%\", maxHeight: \"800px\", display: \"block\", marginBottom: \"10px\" }} />\r\n                )} */}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          Likes {post.likes}\r\n          <div className=\"comments-container\">\r\n            Comments:\r\n            {post.comments[0] &&\r\n              post.comments.map((comment, index) => (\r\n                <div key={index} className=\"comment\">\r\n                  {comment}\r\n                </div>\r\n              ))}\r\n          </div>\r\n          {/* Like/unlike buttons */}\r\n          <div>\r\n            <button onClick={() => handleLike(post._id)}>Like</button>\r\n            <button onClick={() => handleUnlike(post._id)}>Unlike</button>\r\n          </div>\r\n          {/* Comment section */}\r\n          <div>\r\n            <input type=\"text\" placeholder=\"Add comment\" />\r\n            <button onClick={() => handleAddComment(post._id, \"New comment\")}>\r\n              Add Comment\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;MACnE,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCJ,QAAQ,CAACK,IAAI,CAACC,GAAG,CAAC,MAAOC,IAAI,IAAK;QAChC,MAAMC,aAAa,GAAG,MAAML,OAAO,CAACC,GAAG,CACrCG,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC,MAAOI,MAAM,IAAK;UAC/B,MAAMC,YAAY,GAAG,MAAMpB,KAAK,CAACU,GAAG,CACjC,mCAAkCS,MAAO,EAC5C,CAAC;UACD,OAAOC,YAAY,CAACN,IAAI;QAC1B,CAAC,CACH,CAAC;QACD,OAAO;UAAE,GAAGE,IAAI;UAAEE,KAAK,EAAED;QAAc,CAAC;MAC1C,CAAC,CACH,CAAC;MACDI,OAAO,CAACC,GAAG,CAACX,cAAc,CAAC;MAC3BJ,QAAQ,CAACI,cAAc,CAAC;IAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAM5B,KAAK,CAACgB,IAAI,CACb,mCAAkCS,MAAO,OAAM,EAChD,CAAC,CAAC,EACF;QACEI,OAAO,EAAE;UACPC,aAAa,EAAEJ;QACjB;MACF,CACF,CAAC;MACDlB,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAON,MAAM,IAAK;IACrC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAM5B,KAAK,CAACgC,MAAM,CAAE,mCAAkCP,MAAO,SAAQ,EAAE;QACrEI,OAAO,EAAE;UACPC,aAAa,EAAEJ;QACjB;MACF,CAAC,CAAC;MACFlB,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAAA,CAAOR,MAAM,EAAES,OAAO,KAAK;IAClD,IAAI;MACF,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAM5B,KAAK,CAACgB,IAAI,CACb,mCAAkCS,MAAO,WAAU,EACpD;QAAES;MAAQ,CAAC,EACX;QACEL,OAAO,EAAE;UACPC,aAAa,EAAEJ,KAAK;UACpB,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDlB,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKgC,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,EACpDhC,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdb,OAAA;MAEEgC,SAAS,EAAC,gBAAgB;MAC1BC,KAAK,EAAE;QACLG,eAAe,EAAE,OAAO;QACxBF,OAAO,EAAE,MAAM;QACfG,YAAY,EAAE,MAAM;QACpBC,SAAS,EAAE,0BAA0B;QACrCC,YAAY,EAAE;MAChB,CAAE;MAAAJ,QAAA,gBAGFnC,OAAA;QAAAmC,QAAA,EAAMtB,IAAI,CAAC2B;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzB5C,OAAA;QAAAmC,QAAA,eACEnC,OAAA,CAACF,IAAI;UAAC+C,EAAE,EAAG,YAAWhC,IAAI,CAACiC,QAAS,EAAE;UAAAX,QAAA,EAAEtB,IAAI,CAACiC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eAEL5C,OAAA;QAAAmC,QAAA,EACGtB,IAAI,CAACE,KAAK,CAACH,GAAG,CAAEmC,IAAI,iBACnB/C,OAAA;UAAAmC,QAAA,eAEEnC,OAAA;YACEiC,KAAK,EAAE;cACLM,YAAY,EAAE,MAAM;cACpBS,YAAY,EAAE,gBAAgB;cAC9BC,aAAa,EAAE;YACjB,CAAE;YAAAd,QAAA,GAEDY,IAAI,CAACG,IAAI,EAAC,GAAC,eAAAlD,OAAA;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACjBG,IAAI,CAACI,OAAO;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC,GAXEG,IAAI,CAACK,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,UACA,EAAC/B,IAAI,CAACwC,KAAK,eACjBrD,OAAA;QAAKgC,SAAS,EAAC,oBAAoB;QAAAG,QAAA,GAAC,WAElC,EAACtB,IAAI,CAACyC,QAAQ,CAAC,CAAC,CAAC,IACfzC,IAAI,CAACyC,QAAQ,CAAC1C,GAAG,CAAC,CAACmB,OAAO,EAAEwB,KAAK,kBAC/BvD,OAAA;UAAiBgC,SAAS,EAAC,SAAS;UAAAG,QAAA,EACjCJ;QAAO,GADAwB,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEN5C,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAMnC,UAAU,CAACR,IAAI,CAACuC,GAAG,CAAE;UAAAjB,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1D5C,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAM5B,YAAY,CAACf,IAAI,CAACuC,GAAG,CAAE;UAAAjB,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eAEN5C,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAOyD,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAa;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/C5C,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACjB,IAAI,CAACuC,GAAG,EAAE,aAAa,CAAE;UAAAjB,QAAA,EAAC;QAElE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,GAzDD/B,IAAI,CAACuC,GAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0DV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAnJID,KAAK;AAAA0D,EAAA,GAAL1D,KAAK;AAqJX,eAAeA,KAAK;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}