{"ast":null,"code":"'use strict';\n\nconst Decimal128Type = require('../types/decimal128');\nconst assert = require('assert');\nmodule.exports = function castDecimal128(value) {\n  if (value == null) {\n    return value;\n  }\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n  if (typeof Buffer === 'function' && Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n  if (typeof Uint8Array === 'function' && value instanceof Uint8Array) {\n    return new Decimal128Type(value);\n  }\n  if (typeof value === 'number') {\n    return Decimal128Type.fromString(String(value));\n  }\n  if (typeof value.valueOf === 'function' && typeof value.valueOf() === 'string') {\n    return Decimal128Type.fromString(value.valueOf());\n  }\n  assert.ok(false);\n};","map":{"version":3,"names":["Decimal128Type","require","assert","module","exports","castDecimal128","value","$numberDecimal","fromString","Buffer","isBuffer","Uint8Array","String","valueOf","ok"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/cast/decimal128.js"],"sourcesContent":["'use strict';\n\nconst Decimal128Type = require('../types/decimal128');\nconst assert = require('assert');\n\nmodule.exports = function castDecimal128(value) {\n  if (value == null) {\n    return value;\n  }\n\n  if (typeof value === 'object' && typeof value.$numberDecimal === 'string') {\n    return Decimal128Type.fromString(value.$numberDecimal);\n  }\n\n  if (value instanceof Decimal128Type) {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return Decimal128Type.fromString(value);\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer(value)) {\n    return new Decimal128Type(value);\n  }\n  if (typeof Uint8Array === 'function' && value instanceof Uint8Array) {\n    return new Decimal128Type(value);\n  }\n\n  if (typeof value === 'number') {\n    return Decimal128Type.fromString(String(value));\n  }\n\n  if (typeof value.valueOf === 'function' && typeof value.valueOf() === 'string') {\n    return Decimal128Type.fromString(value.valueOf());\n  }\n\n  assert.ok(false);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACrD,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEhCE,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC9C,IAAIA,KAAK,IAAI,IAAI,EAAE;IACjB,OAAOA,KAAK;EACd;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,CAACC,cAAc,KAAK,QAAQ,EAAE;IACzE,OAAOP,cAAc,CAACQ,UAAU,CAACF,KAAK,CAACC,cAAc,CAAC;EACxD;EAEA,IAAID,KAAK,YAAYN,cAAc,EAAE;IACnC,OAAOM,KAAK;EACd;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAON,cAAc,CAACQ,UAAU,CAACF,KAAK,CAAC;EACzC;EAEA,IAAI,OAAOG,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,QAAQ,CAACJ,KAAK,CAAC,EAAE;IAC1D,OAAO,IAAIN,cAAc,CAACM,KAAK,CAAC;EAClC;EACA,IAAI,OAAOK,UAAU,KAAK,UAAU,IAAIL,KAAK,YAAYK,UAAU,EAAE;IACnE,OAAO,IAAIX,cAAc,CAACM,KAAK,CAAC;EAClC;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAON,cAAc,CAACQ,UAAU,CAACI,MAAM,CAACN,KAAK,CAAC,CAAC;EACjD;EAEA,IAAI,OAAOA,KAAK,CAACO,OAAO,KAAK,UAAU,IAAI,OAAOP,KAAK,CAACO,OAAO,CAAC,CAAC,KAAK,QAAQ,EAAE;IAC9E,OAAOb,cAAc,CAACQ,UAAU,CAACF,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EACnD;EAEAX,MAAM,CAACY,EAAE,CAAC,KAAK,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}