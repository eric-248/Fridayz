{"ast":null,"code":"/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     const mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * Error messages support basic templating. Mongoose will replace the following strings with the corresponding value.\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static\n * @memberOf MongooseError\n * @api public\n */\n\n'use strict';\n\nconst msg = module.exports = exports = {};\nmsg.DocumentNotFoundError = null;\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\nmsg.Number.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';","map":{"version":3,"names":["msg","module","exports","DocumentNotFoundError","general","default","required","Number","min","max","enum","Date","String","match","minlength","maxlength"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/error/messages.js"],"sourcesContent":["\n/**\n * The default built-in validator error messages. These may be customized.\n *\n *     // customize within each schema or globally like so\n *     const mongoose = require('mongoose');\n *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";\n *\n * Error messages support basic templating. Mongoose will replace the following strings with the corresponding value.\n *\n * - `{PATH}` is replaced with the invalid document path\n * - `{VALUE}` is replaced with the invalid value\n * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\"\n * - `{MIN}` is replaced with the declared min value for the Number.min validator\n * - `{MAX}` is replaced with the declared max value for the Number.max validator\n *\n * Click the \"show code\" link below to see all defaults.\n *\n * @static\n * @memberOf MongooseError\n * @api public\n */\n\n'use strict';\n\nconst msg = module.exports = exports = {};\n\nmsg.DocumentNotFoundError = null;\n\nmsg.general = {};\nmsg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';\nmsg.general.required = 'Path `{PATH}` is required.';\n\nmsg.Number = {};\nmsg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';\nmsg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';\nmsg.Number.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\n\nmsg.Date = {};\nmsg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';\nmsg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';\n\nmsg.String = {};\nmsg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';\nmsg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';\nmsg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';\nmsg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;AAEzCF,GAAG,CAACG,qBAAqB,GAAG,IAAI;AAEhCH,GAAG,CAACI,OAAO,GAAG,CAAC,CAAC;AAChBJ,GAAG,CAACI,OAAO,CAACC,OAAO,GAAG,yDAAyD;AAC/EL,GAAG,CAACI,OAAO,CAACE,QAAQ,GAAG,4BAA4B;AAEnDN,GAAG,CAACO,MAAM,GAAG,CAAC,CAAC;AACfP,GAAG,CAACO,MAAM,CAACC,GAAG,GAAG,qEAAqE;AACtFR,GAAG,CAACO,MAAM,CAACE,GAAG,GAAG,qEAAqE;AACtFT,GAAG,CAACO,MAAM,CAACG,IAAI,GAAG,wDAAwD;AAE1EV,GAAG,CAACW,IAAI,GAAG,CAAC,CAAC;AACbX,GAAG,CAACW,IAAI,CAACH,GAAG,GAAG,kEAAkE;AACjFR,GAAG,CAACW,IAAI,CAACF,GAAG,GAAG,iEAAiE;AAEhFT,GAAG,CAACY,MAAM,GAAG,CAAC,CAAC;AACfZ,GAAG,CAACY,MAAM,CAACF,IAAI,GAAG,wDAAwD;AAC1EV,GAAG,CAACY,MAAM,CAACC,KAAK,GAAG,qCAAqC;AACxDb,GAAG,CAACY,MAAM,CAACE,SAAS,GAAG,qFAAqF;AAC5Gd,GAAG,CAACY,MAAM,CAACG,SAAS,GAAG,oFAAoF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}