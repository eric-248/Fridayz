{"ast":null,"code":"'use strict';\n\nconst getConstructorName = require('../getConstructorName');\nmodule.exports = function allServersUnknown(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n  const servers = Array.from(topologyDescription.servers.values());\n  return servers.length > 0 && servers.every(server => server.type === 'Unknown');\n};","map":{"version":3,"names":["getConstructorName","require","module","exports","allServersUnknown","topologyDescription","servers","Array","from","values","length","every","server","type"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/helpers/topology/allServersUnknown.js"],"sourcesContent":["'use strict';\n\nconst getConstructorName = require('../getConstructorName');\n\nmodule.exports = function allServersUnknown(topologyDescription) {\n  if (getConstructorName(topologyDescription) !== 'TopologyDescription') {\n    return false;\n  }\n\n  const servers = Array.from(topologyDescription.servers.values());\n  return servers.length > 0 && servers.every(server => server.type === 'Unknown');\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,kBAAkB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE3DC,MAAM,CAACC,OAAO,GAAG,SAASC,iBAAiBA,CAACC,mBAAmB,EAAE;EAC/D,IAAIL,kBAAkB,CAACK,mBAAmB,CAAC,KAAK,qBAAqB,EAAE;IACrE,OAAO,KAAK;EACd;EAEA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACH,mBAAmB,CAACC,OAAO,CAACG,MAAM,CAAC,CAAC,CAAC;EAChE,OAAOH,OAAO,CAACI,MAAM,GAAG,CAAC,IAAIJ,OAAO,CAACK,KAAK,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,SAAS,CAAC;AACjF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}