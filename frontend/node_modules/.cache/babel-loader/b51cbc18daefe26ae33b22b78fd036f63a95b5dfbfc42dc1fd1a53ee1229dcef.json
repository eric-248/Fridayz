{"ast":null,"code":"'use strict';\n\nmodule.exports = function checkEmbeddedDiscriminatorKeyProjection(userProjection, path, schema, selected, addedPaths) {\n  const userProjectedInPath = Object.keys(userProjection).reduce((cur, key) => cur || key.startsWith(path + '.'), false);\n  const _discriminatorKey = path + '.' + schema.options.discriminatorKey;\n  if (!userProjectedInPath && addedPaths.length === 1 && addedPaths[0] === _discriminatorKey) {\n    selected.splice(selected.indexOf(_discriminatorKey), 1);\n  }\n};","map":{"version":3,"names":["module","exports","checkEmbeddedDiscriminatorKeyProjection","userProjection","path","schema","selected","addedPaths","userProjectedInPath","Object","keys","reduce","cur","key","startsWith","_discriminatorKey","options","discriminatorKey","length","splice","indexOf"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/helpers/discriminator/checkEmbeddedDiscriminatorKeyProjection.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function checkEmbeddedDiscriminatorKeyProjection(userProjection, path, schema, selected, addedPaths) {\n  const userProjectedInPath = Object.keys(userProjection).\n    reduce((cur, key) => cur || key.startsWith(path + '.'), false);\n  const _discriminatorKey = path + '.' + schema.options.discriminatorKey;\n  if (!userProjectedInPath &&\n      addedPaths.length === 1 &&\n      addedPaths[0] === _discriminatorKey) {\n    selected.splice(selected.indexOf(_discriminatorKey), 1);\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,uCAAuCA,CAACC,cAAc,EAAEC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACpH,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC,CACrDQ,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,IAAIC,GAAG,CAACC,UAAU,CAACV,IAAI,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC;EAChE,MAAMW,iBAAiB,GAAGX,IAAI,GAAG,GAAG,GAAGC,MAAM,CAACW,OAAO,CAACC,gBAAgB;EACtE,IAAI,CAACT,mBAAmB,IACpBD,UAAU,CAACW,MAAM,KAAK,CAAC,IACvBX,UAAU,CAAC,CAAC,CAAC,KAAKQ,iBAAiB,EAAE;IACvCT,QAAQ,CAACa,MAAM,CAACb,QAAQ,CAACc,OAAO,CAACL,iBAAiB,CAAC,EAAE,CAAC,CAAC;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}