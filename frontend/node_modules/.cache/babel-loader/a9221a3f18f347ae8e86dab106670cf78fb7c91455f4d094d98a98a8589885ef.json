{"ast":null,"code":"'use strict';\n\n/*!\n * Module dependencies.\n */\nconst CastError = require('../error/cast');\nconst EventEmitter = require('events').EventEmitter;\nconst ObjectExpectedError = require('../error/objectExpected');\nconst SchemaSubdocumentOptions = require('../options/schemaSubdocumentOptions');\nconst SchemaType = require('../schemaType');\nconst applyDefaults = require('../helpers/document/applyDefaults');\nconst $exists = require('./operators/exists');\nconst castToNumber = require('./operators/helpers').castToNumber;\nconst discriminator = require('../helpers/model/discriminator');\nconst geospatial = require('./operators/geospatial');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\nconst handleIdOption = require('../helpers/schema/handleIdOption');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst isExclusive = require('../helpers/projection/isExclusive');\nconst utils = require('../utils');\nconst InvalidSchemaOptionError = require('../error/invalidSchemaOption');\nlet SubdocumentType;\nmodule.exports = SchemaSubdocument;\n\n/**\n * Single nested subdocument SchemaType constructor.\n *\n * @param {Schema} schema\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaSubdocument(schema, path, options) {\n  if (schema.options.timeseries) {\n    throw new InvalidSchemaOptionError(path, 'timeseries');\n  }\n  const schemaTypeIdOption = SchemaSubdocument.defaultOptions && SchemaSubdocument.defaultOptions._id;\n  if (schemaTypeIdOption != null) {\n    options = options || {};\n    options._id = schemaTypeIdOption;\n  }\n  schema = handleIdOption(schema, options);\n  this.caster = _createConstructor(schema, null, options);\n  this.caster.path = path;\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  this.base = schema.base;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype = Object.create(SchemaType.prototype);\nSchemaSubdocument.prototype.constructor = SchemaSubdocument;\nSchemaSubdocument.prototype.OptionsConstructor = SchemaSubdocumentOptions;\n\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema, baseClass, options) {\n  // lazy load\n  SubdocumentType || (SubdocumentType = require('../types/subdocument'));\n  const _embedded = function SingleNested(value, path, parent) {\n    this.$__parent = parent;\n    SubdocumentType.apply(this, arguments);\n    if (parent == null) {\n      return;\n    }\n    this.$session(parent.$session());\n  };\n  schema._preCompile();\n  const proto = baseClass != null ? baseClass.prototype : SubdocumentType.prototype;\n  _embedded.prototype = Object.create(proto);\n  _embedded.prototype.$__setSchema(schema);\n  _embedded.prototype.constructor = _embedded;\n  _embedded.$__required = options?.required;\n  _embedded.base = schema.base;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n  _embedded.events = new EventEmitter();\n  _embedded.prototype.toBSON = function () {\n    return this.toObject(internalToObjectOptions);\n  };\n\n  // apply methods\n  for (const i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (const i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n  for (const i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n  return _embedded;\n}\n\n/**\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\nSchemaSubdocument.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val, context) {\n  return {\n    $geometry: this.castForQuery(null, val.$geometry, context)\n  };\n};\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype.$conditionalHandlers.$near = SchemaSubdocument.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\nSchemaSubdocument.prototype.$conditionalHandlers.$within = SchemaSubdocument.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\nSchemaSubdocument.prototype.$conditionalHandlers.$geoIntersects = geospatial.cast$geoIntersects;\nSchemaSubdocument.prototype.$conditionalHandlers.$minDistance = castToNumber;\nSchemaSubdocument.prototype.$conditionalHandlers.$maxDistance = castToNumber;\nSchemaSubdocument.prototype.$conditionalHandlers.$exists = $exists;\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nSchemaSubdocument.prototype.cast = function (val, doc, init, priorVal, options) {\n  if (val && val.$isSingleNested && val.parent === doc) {\n    return val;\n  }\n  if (val != null && (typeof val !== 'object' || Array.isArray(val))) {\n    throw new ObjectExpectedError(this.path, val);\n  }\n  const discriminatorKeyPath = this.schema.path(this.schema.options.discriminatorKey);\n  const defaultDiscriminatorValue = discriminatorKeyPath == null ? null : discriminatorKeyPath.getDefault(doc);\n  const Constructor = getConstructor(this.caster, val, defaultDiscriminatorValue);\n  let subdoc;\n\n  // Only pull relevant selected paths and pull out the base path\n  const parentSelected = doc && doc.$__ && doc.$__.selected;\n  const path = this.path;\n  const selected = parentSelected == null ? null : Object.keys(parentSelected).reduce((obj, key) => {\n    if (key.startsWith(path + '.')) {\n      obj = obj || {};\n      obj[key.substring(path.length + 1)] = parentSelected[key];\n    }\n    return obj;\n  }, null);\n  if (init) {\n    subdoc = new Constructor(void 0, selected, doc, false, {\n      defaults: false\n    });\n    delete subdoc.$__.defaults;\n    subdoc.$init(val);\n    const exclude = isExclusive(selected);\n    applyDefaults(subdoc, selected, exclude);\n  } else {\n    options = Object.assign({}, options, {\n      priorDoc: priorVal\n    });\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, selected, doc, undefined, options);\n    }\n    return new Constructor(val, selected, doc, undefined, options);\n  }\n  return subdoc;\n};\n\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\nSchemaSubdocument.prototype.castForQuery = function ($conditional, val, context, options) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n    return handler.call(this, val);\n  }\n  if (val == null) {\n    return val;\n  }\n  const Constructor = getConstructor(this.caster, val);\n  if (val instanceof Constructor) {\n    return val;\n  }\n  if (this.options.runSetters) {\n    val = this._applySetters(val, context);\n  }\n  const overrideStrict = options != null && options.strict != null ? options.strict : void 0;\n  try {\n    val = new Constructor(val, overrideStrict);\n  } catch (error) {\n    // Make sure we always wrap in a CastError (gh-6803)\n    if (!(error instanceof CastError)) {\n      throw new CastError('Embedded', val, this.path, error, this);\n    }\n    throw error;\n  }\n  return val;\n};\n\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\nSchemaSubdocument.prototype.doValidate = function (value, fn, scope, options) {\n  const Constructor = getConstructor(this.caster, value);\n  if (value && !(value instanceof Constructor)) {\n    value = new Constructor(value, null, scope != null && scope.$__ != null ? scope : null);\n  }\n  if (options && options.skipSchemaValidators) {\n    if (!value) {\n      return fn(null);\n    }\n    return value.validate().then(() => fn(null), err => fn(err));\n  }\n  SchemaType.prototype.doValidate.call(this, value, function (error) {\n    if (error) {\n      return fn(error);\n    }\n    if (!value) {\n      return fn(null);\n    }\n    value.validate().then(() => fn(null), err => fn(err));\n  }, scope, options);\n};\n\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\nSchemaSubdocument.prototype.doValidateSync = function (value, scope, options) {\n  if (!options || !options.skipSchemaValidators) {\n    const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n    if (schemaTypeError) {\n      return schemaTypeError;\n    }\n  }\n  if (!value) {\n    return;\n  }\n  return value.validateSync();\n};\n\n/**\n * Adds a discriminator to this single nested subdocument.\n *\n * #### Example:\n *\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shape: shapeSchema });\n *\n *     const singleNestedPath = parentSchema.path('shape');\n *     singleNestedPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {Object|string} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @see discriminators https://mongoosejs.com/docs/discriminators.html\n * @api public\n */\n\nSchemaSubdocument.prototype.discriminator = function (name, schema, options) {\n  options = options || {};\n  const value = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean' ? options.clone : true;\n  if (schema.instanceOfSchema && clone) {\n    schema = schema.clone();\n  }\n  schema = discriminator(this.caster, name, schema, value);\n  this.caster.discriminators[name] = _createConstructor(schema, this.caster);\n  return this.caster.discriminators[name];\n};\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.defaultOptions = {};\n\n/**\n * Sets a default option for all Subdocument instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.Subdocument.set('required', true);\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {void}\n * @function set\n * @static\n * @api public\n */\n\nSchemaSubdocument.set = SchemaType.set;\nSchemaSubdocument.setters = [];\n\n/**\n * Attaches a getter for all Subdocument instances\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaSubdocument.get = SchemaType.get;\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype.toJSON = function toJSON() {\n  return {\n    path: this.path,\n    options: this.options\n  };\n};\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype.clone = function () {\n  const schematype = new this.constructor(this.schema, this.path, {\n    ...this.options,\n    _skipApplyDiscriminators: true\n  });\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  schematype.caster.discriminators = Object.assign({}, this.caster.discriminators);\n  return schematype;\n};","map":{"version":3,"names":["CastError","require","EventEmitter","ObjectExpectedError","SchemaSubdocumentOptions","SchemaType","applyDefaults","$exists","castToNumber","discriminator","geospatial","getConstructor","handleIdOption","internalToObjectOptions","isExclusive","utils","InvalidSchemaOptionError","SubdocumentType","module","exports","SchemaSubdocument","schema","path","options","timeseries","schemaTypeIdOption","defaultOptions","_id","caster","_createConstructor","prototype","$basePath","$isSingleNested","base","call","Object","create","constructor","OptionsConstructor","baseClass","_embedded","SingleNested","value","parent","$__parent","apply","arguments","$session","_preCompile","proto","$__setSchema","$__required","required","events","toBSON","toObject","i","methods","statics","$conditionalHandlers","$geoWithin","handle$geoWithin","val","context","$geometry","castForQuery","$near","$nearSphere","cast$near","$within","cast$within","$geoIntersects","cast$geoIntersects","$minDistance","$maxDistance","cast","doc","init","priorVal","Array","isArray","discriminatorKeyPath","discriminatorKey","defaultDiscriminatorValue","getDefault","Constructor","subdoc","parentSelected","$__","selected","keys","reduce","obj","key","startsWith","substring","length","defaults","$init","exclude","assign","priorDoc","undefined","$conditional","handler","Error","runSetters","_applySetters","overrideStrict","strict","error","doValidate","fn","scope","skipSchemaValidators","validate","then","err","doValidateSync","schemaTypeError","validateSync","name","isPOJO","clone","instanceOfSchema","discriminators","set","setters","get","toJSON","schematype","_skipApplyDiscriminators","validators","slice","requiredValidator"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/schema/subdocument.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst CastError = require('../error/cast');\nconst EventEmitter = require('events').EventEmitter;\nconst ObjectExpectedError = require('../error/objectExpected');\nconst SchemaSubdocumentOptions = require('../options/schemaSubdocumentOptions');\nconst SchemaType = require('../schemaType');\nconst applyDefaults = require('../helpers/document/applyDefaults');\nconst $exists = require('./operators/exists');\nconst castToNumber = require('./operators/helpers').castToNumber;\nconst discriminator = require('../helpers/model/discriminator');\nconst geospatial = require('./operators/geospatial');\nconst getConstructor = require('../helpers/discriminator/getConstructor');\nconst handleIdOption = require('../helpers/schema/handleIdOption');\nconst internalToObjectOptions = require('../options').internalToObjectOptions;\nconst isExclusive = require('../helpers/projection/isExclusive');\nconst utils = require('../utils');\nconst InvalidSchemaOptionError = require('../error/invalidSchemaOption');\n\nlet SubdocumentType;\n\nmodule.exports = SchemaSubdocument;\n\n/**\n * Single nested subdocument SchemaType constructor.\n *\n * @param {Schema} schema\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaSubdocument(schema, path, options) {\n  if (schema.options.timeseries) {\n    throw new InvalidSchemaOptionError(path, 'timeseries');\n  }\n  const schemaTypeIdOption = SchemaSubdocument.defaultOptions &&\n    SchemaSubdocument.defaultOptions._id;\n  if (schemaTypeIdOption != null) {\n    options = options || {};\n    options._id = schemaTypeIdOption;\n  }\n\n  schema = handleIdOption(schema, options);\n\n  this.caster = _createConstructor(schema, null, options);\n  this.caster.path = path;\n  this.caster.prototype.$basePath = path;\n  this.schema = schema;\n  this.$isSingleNested = true;\n  this.base = schema.base;\n  SchemaType.call(this, path, options, 'Embedded');\n}\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype = Object.create(SchemaType.prototype);\nSchemaSubdocument.prototype.constructor = SchemaSubdocument;\nSchemaSubdocument.prototype.OptionsConstructor = SchemaSubdocumentOptions;\n\n/*!\n * ignore\n */\n\nfunction _createConstructor(schema, baseClass, options) {\n  // lazy load\n  SubdocumentType || (SubdocumentType = require('../types/subdocument'));\n\n  const _embedded = function SingleNested(value, path, parent) {\n    this.$__parent = parent;\n    SubdocumentType.apply(this, arguments);\n\n    if (parent == null) {\n      return;\n    }\n    this.$session(parent.$session());\n  };\n\n  schema._preCompile();\n\n  const proto = baseClass != null ? baseClass.prototype : SubdocumentType.prototype;\n  _embedded.prototype = Object.create(proto);\n  _embedded.prototype.$__setSchema(schema);\n  _embedded.prototype.constructor = _embedded;\n  _embedded.$__required = options?.required;\n  _embedded.base = schema.base;\n  _embedded.schema = schema;\n  _embedded.$isSingleNested = true;\n  _embedded.events = new EventEmitter();\n  _embedded.prototype.toBSON = function() {\n    return this.toObject(internalToObjectOptions);\n  };\n\n  // apply methods\n  for (const i in schema.methods) {\n    _embedded.prototype[i] = schema.methods[i];\n  }\n\n  // apply statics\n  for (const i in schema.statics) {\n    _embedded[i] = schema.statics[i];\n  }\n\n  for (const i in EventEmitter.prototype) {\n    _embedded[i] = EventEmitter.prototype[i];\n  }\n\n  return _embedded;\n}\n\n/**\n * Special case for when users use a common location schema to represent\n * locations for use with $geoWithin.\n * https://www.mongodb.com/docs/manual/reference/operator/query/geoWithin/\n *\n * @param {Object} val\n * @api private\n */\n\nSchemaSubdocument.prototype.$conditionalHandlers.$geoWithin = function handle$geoWithin(val, context) {\n  return { $geometry: this.castForQuery(null, val.$geometry, context) };\n};\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype.$conditionalHandlers.$near =\nSchemaSubdocument.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;\n\nSchemaSubdocument.prototype.$conditionalHandlers.$within =\nSchemaSubdocument.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;\n\nSchemaSubdocument.prototype.$conditionalHandlers.$geoIntersects =\n  geospatial.cast$geoIntersects;\n\nSchemaSubdocument.prototype.$conditionalHandlers.$minDistance = castToNumber;\nSchemaSubdocument.prototype.$conditionalHandlers.$maxDistance = castToNumber;\n\nSchemaSubdocument.prototype.$conditionalHandlers.$exists = $exists;\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @api private\n */\n\nSchemaSubdocument.prototype.cast = function(val, doc, init, priorVal, options) {\n  if (val && val.$isSingleNested && val.parent === doc) {\n    return val;\n  }\n\n  if (val != null && (typeof val !== 'object' || Array.isArray(val))) {\n    throw new ObjectExpectedError(this.path, val);\n  }\n\n  const discriminatorKeyPath = this.schema.path(this.schema.options.discriminatorKey);\n  const defaultDiscriminatorValue = discriminatorKeyPath == null ? null : discriminatorKeyPath.getDefault(doc);\n  const Constructor = getConstructor(this.caster, val, defaultDiscriminatorValue);\n\n  let subdoc;\n\n  // Only pull relevant selected paths and pull out the base path\n  const parentSelected = doc && doc.$__ && doc.$__.selected;\n  const path = this.path;\n  const selected = parentSelected == null ? null : Object.keys(parentSelected).reduce((obj, key) => {\n    if (key.startsWith(path + '.')) {\n      obj = obj || {};\n      obj[key.substring(path.length + 1)] = parentSelected[key];\n    }\n    return obj;\n  }, null);\n  if (init) {\n    subdoc = new Constructor(void 0, selected, doc, false, { defaults: false });\n    delete subdoc.$__.defaults;\n    subdoc.$init(val);\n    const exclude = isExclusive(selected);\n    applyDefaults(subdoc, selected, exclude);\n  } else {\n    options = Object.assign({}, options, { priorDoc: priorVal });\n    if (Object.keys(val).length === 0) {\n      return new Constructor({}, selected, doc, undefined, options);\n    }\n\n    return new Constructor(val, selected, doc, undefined, options);\n  }\n\n  return subdoc;\n};\n\n/**\n * Casts contents for query\n *\n * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)\n * @param {any} value\n * @api private\n */\n\nSchemaSubdocument.prototype.castForQuery = function($conditional, val, context, options) {\n  let handler;\n  if ($conditional != null) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler) {\n      throw new Error('Can\\'t use ' + $conditional);\n    }\n    return handler.call(this, val);\n  }\n  if (val == null) {\n    return val;\n  }\n\n  const Constructor = getConstructor(this.caster, val);\n  if (val instanceof Constructor) {\n    return val;\n  }\n\n  if (this.options.runSetters) {\n    val = this._applySetters(val, context);\n  }\n\n  const overrideStrict = options != null && options.strict != null ?\n    options.strict :\n    void 0;\n\n  try {\n    val = new Constructor(val, overrideStrict);\n  } catch (error) {\n    // Make sure we always wrap in a CastError (gh-6803)\n    if (!(error instanceof CastError)) {\n      throw new CastError('Embedded', val, this.path, error, this);\n    }\n    throw error;\n  }\n  return val;\n};\n\n/**\n * Async validation on this single nested doc.\n *\n * @api private\n */\n\nSchemaSubdocument.prototype.doValidate = function(value, fn, scope, options) {\n  const Constructor = getConstructor(this.caster, value);\n\n  if (value && !(value instanceof Constructor)) {\n    value = new Constructor(value, null, (scope != null && scope.$__ != null) ? scope : null);\n  }\n\n  if (options && options.skipSchemaValidators) {\n    if (!value) {\n      return fn(null);\n    }\n    return value.validate().then(() => fn(null), err => fn(err));\n  }\n\n  SchemaType.prototype.doValidate.call(this, value, function(error) {\n    if (error) {\n      return fn(error);\n    }\n    if (!value) {\n      return fn(null);\n    }\n\n    value.validate().then(() => fn(null), err => fn(err));\n  }, scope, options);\n};\n\n/**\n * Synchronously validate this single nested doc\n *\n * @api private\n */\n\nSchemaSubdocument.prototype.doValidateSync = function(value, scope, options) {\n  if (!options || !options.skipSchemaValidators) {\n    const schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);\n    if (schemaTypeError) {\n      return schemaTypeError;\n    }\n  }\n  if (!value) {\n    return;\n  }\n  return value.validateSync();\n};\n\n/**\n * Adds a discriminator to this single nested subdocument.\n *\n * #### Example:\n *\n *     const shapeSchema = Schema({ name: String }, { discriminatorKey: 'kind' });\n *     const schema = Schema({ shape: shapeSchema });\n *\n *     const singleNestedPath = parentSchema.path('shape');\n *     singleNestedPath.discriminator('Circle', Schema({ radius: Number }));\n *\n * @param {String} name\n * @param {Schema} schema fields to add to the schema for instances of this sub-class\n * @param {Object|string} [options] If string, same as `options.value`.\n * @param {String} [options.value] the string stored in the `discriminatorKey` property. If not specified, Mongoose uses the `name` parameter.\n * @param {Boolean} [options.clone=true] By default, `discriminator()` clones the given `schema`. Set to `false` to skip cloning.\n * @return {Function} the constructor Mongoose will use for creating instances of this discriminator model\n * @see discriminators https://mongoosejs.com/docs/discriminators.html\n * @api public\n */\n\nSchemaSubdocument.prototype.discriminator = function(name, schema, options) {\n  options = options || {};\n  const value = utils.isPOJO(options) ? options.value : options;\n  const clone = typeof options.clone === 'boolean'\n    ? options.clone\n    : true;\n\n  if (schema.instanceOfSchema && clone) {\n    schema = schema.clone();\n  }\n\n  schema = discriminator(this.caster, name, schema, value);\n\n  this.caster.discriminators[name] = _createConstructor(schema, this.caster);\n\n  return this.caster.discriminators[name];\n};\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.defaultOptions = {};\n\n/**\n * Sets a default option for all Subdocument instances.\n *\n * #### Example:\n *\n *     // Make all numbers have option `min` equal to 0.\n *     mongoose.Schema.Subdocument.set('required', true);\n *\n * @param {String} option The option you'd like to set the value for\n * @param {Any} value value for option\n * @return {void}\n * @function set\n * @static\n * @api public\n */\n\nSchemaSubdocument.set = SchemaType.set;\n\nSchemaSubdocument.setters = [];\n\n/**\n * Attaches a getter for all Subdocument instances\n *\n * @param {Function} getter\n * @return {this}\n * @function get\n * @static\n * @api public\n */\n\nSchemaSubdocument.get = SchemaType.get;\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype.toJSON = function toJSON() {\n  return { path: this.path, options: this.options };\n};\n\n/*!\n * ignore\n */\n\nSchemaSubdocument.prototype.clone = function() {\n  const schematype = new this.constructor(\n    this.schema,\n    this.path,\n    { ...this.options, _skipApplyDiscriminators: true }\n  );\n  schematype.validators = this.validators.slice();\n  if (this.requiredValidator !== undefined) {\n    schematype.requiredValidator = this.requiredValidator;\n  }\n  schematype.caster.discriminators = Object.assign({}, this.caster.discriminators);\n  return schematype;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}