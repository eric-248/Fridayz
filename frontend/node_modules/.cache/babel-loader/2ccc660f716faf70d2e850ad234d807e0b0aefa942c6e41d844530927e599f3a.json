{"ast":null,"code":"'use strict';\n\n/*!\n * Module dependencies.\n */\nconst MongooseCollection = require('../../collection');\nconst MongooseError = require('../../error/mongooseError');\nconst Collection = require('mongodb').Collection;\nconst ObjectId = require('../../types/objectid');\nconst getConstructorName = require('../../helpers/getConstructorName');\nconst internalToObjectOptions = require('../../options').internalToObjectOptions;\nconst stream = require('stream');\nconst util = require('util');\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\n *\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\n *\n * @inherits Collection https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html\n * @api private\n */\n\nfunction NativeCollection(name, conn, options) {\n  this.collection = null;\n  this.Promise = options.Promise || Promise;\n  this.modelName = options.modelName;\n  delete options.modelName;\n  this._closed = false;\n  MongooseCollection.apply(this, arguments);\n}\n\n/*!\n * Inherit from abstract Collection.\n */\n\nObject.setPrototypeOf(NativeCollection.prototype, MongooseCollection.prototype);\n\n/**\n * Called when the connection opens.\n *\n * @api private\n */\n\nNativeCollection.prototype.onOpen = function () {\n  this.collection = this.conn.db.collection(this.name);\n  MongooseCollection.prototype.onOpen.call(this);\n  return this.collection;\n};\n\n/**\n * Called when the connection closes\n *\n * @api private\n */\n\nNativeCollection.prototype.onClose = function (force) {\n  MongooseCollection.prototype.onClose.call(this, force);\n};\n\n/**\n * Helper to get the collection, in case `this.collection` isn't set yet.\n * May happen if `bufferCommands` is false and created the model when\n * Mongoose was disconnected.\n *\n * @api private\n */\n\nNativeCollection.prototype._getCollection = function _getCollection() {\n  if (this.collection) {\n    return this.collection;\n  }\n  if (this.conn.db != null) {\n    this.collection = this.conn.db.collection(this.name);\n    return this.collection;\n  }\n  return null;\n};\n\n/*!\n * ignore\n */\n\nconst syncCollectionMethods = {\n  watch: true,\n  find: true,\n  aggregate: true\n};\n\n/**\n * Copy the collection methods and make them subject to queues\n * @param {Number|String} I\n * @api private\n */\n\nfunction iter(i) {\n  NativeCollection.prototype[i] = function () {\n    const collection = this._getCollection();\n    const args = Array.from(arguments);\n    const _this = this;\n    const globalDebug = _this && _this.conn && _this.conn.base && _this.conn.base.options && _this.conn.base.options.debug;\n    const connectionDebug = _this && _this.conn && _this.conn.options && _this.conn.options.debug;\n    const debug = connectionDebug == null ? globalDebug : connectionDebug;\n    const lastArg = arguments[arguments.length - 1];\n    const opId = new ObjectId();\n\n    // If user force closed, queueing will hang forever. See #5664\n    if (this.conn.$wasForceClosed) {\n      const error = new MongooseError('Connection was force closed');\n      if (args.length > 0 && typeof args[args.length - 1] === 'function') {\n        args[args.length - 1](error);\n        return;\n      } else {\n        throw error;\n      }\n    }\n    let _args = args;\n    let callback = null;\n    if (this._shouldBufferCommands() && this.buffer) {\n      this.conn.emit('buffer', {\n        _id: opId,\n        modelName: _this.modelName,\n        collectionName: _this.name,\n        method: i,\n        args: args\n      });\n      let callback;\n      let _args = args;\n      let promise = null;\n      let timeout = null;\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(() => {\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\n        }, []);\n      } else if (syncCollectionMethods[i]) {\n        promise = new Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      } else if (typeof lastArg === 'function') {\n        callback = function collectionOperationCallback() {\n          if (timeout != null) {\n            clearTimeout(timeout);\n          }\n          return lastArg.apply(this, arguments);\n        };\n        _args = args.slice(0, args.length - 1).concat([callback]);\n      } else {\n        promise = new Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      }\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\n      timeout = setTimeout(() => {\n        const removed = this.removeQueue(i, _args);\n        if (removed) {\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' + bufferTimeoutMS + 'ms';\n          const err = new MongooseError(message);\n          this.conn.emit('buffer-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            error: err\n          });\n          callback(err);\n        }\n      }, bufferTimeoutMS);\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(i, _args);\n        return;\n      }\n      return promise;\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n      callback = function collectionOperationCallback(err, res) {\n        if (err != null) {\n          _this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            error: err\n          });\n        } else {\n          _this.conn.emit('operation-end', {\n            _id: opId,\n            modelName: _this.modelName,\n            collectionName: _this.name,\n            method: i,\n            result: res\n          });\n        }\n        return lastArg.apply(this, arguments);\n      };\n      _args = args.slice(0, args.length - 1).concat([callback]);\n    }\n    if (debug) {\n      if (typeof debug === 'function') {\n        let argsToAdd = null;\n        if (typeof args[args.length - 1] == 'function') {\n          argsToAdd = args.slice(0, args.length - 1);\n        } else {\n          argsToAdd = args;\n        }\n        debug.apply(_this, [_this.name, i].concat(argsToAdd));\n      } else if (debug instanceof stream.Writable) {\n        this.$printToStream(_this.name, i, args, debug);\n      } else {\n        const color = debug.color == null ? true : debug.color;\n        const shell = debug.shell == null ? false : debug.shell;\n        this.$print(_this.name, i, args, color, shell);\n      }\n    }\n    this.conn.emit('operation-start', {\n      _id: opId,\n      modelName: _this.modelName,\n      collectionName: this.name,\n      method: i,\n      params: _args\n    });\n    try {\n      if (collection == null) {\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' + 'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' + 'you have `bufferCommands = false`.';\n        throw new MongooseError(message);\n      }\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        const ret = collection[i].apply(collection, _args.slice(0, _args.length - 1));\n        return lastArg.call(this, null, ret);\n      }\n      const ret = collection[i].apply(collection, _args);\n      if (ret != null && typeof ret.then === 'function') {\n        return ret.then(res => {\n          typeof lastArg === 'function' && lastArg(null, res);\n          return res;\n        }, err => {\n          if (typeof lastArg === 'function') {\n            lastArg(err);\n            return;\n          }\n          throw err;\n        });\n      }\n      return ret;\n    } catch (error) {\n      // Collection operation may throw because of max bson size, catch it here\n      // See gh-3906\n      if (typeof lastArg === 'function') {\n        return lastArg(error);\n      } else {\n        this.conn.emit('operation-end', {\n          _id: opId,\n          modelName: _this.modelName,\n          collectionName: this.name,\n          method: i,\n          error: error\n        });\n        throw error;\n      }\n    }\n  };\n}\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\n  // collection abstraction\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key);\n  // Skip properties with getters because they may throw errors (gh-8528)\n  if (descriptor.get !== undefined) {\n    continue;\n  }\n  if (typeof Collection.prototype[key] !== 'function') {\n    continue;\n  }\n  iter(key);\n}\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$print = function (name, i, args, color, shell) {\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j], color, shell));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n  console.info(moduleName + functionCall + params);\n};\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$printToStream = function (name, i, args, stream) {\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j]));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n  stream.write(functionCall + params, 'utf8');\n};\n\n/**\n * Formatter for debug print args\n *\n * @api public\n * @method $format\n */\n\nNativeCollection.prototype.$format = function (arg, color, shell) {\n  const type = typeof arg;\n  if (type === 'function' || type === 'undefined') return '';\n  return format(arg, false, color, shell);\n};\n\n/**\n * Debug print helper\n * @param {Any} representation\n * @api private\n */\n\nfunction inspectable(representation) {\n  const ret = {\n    inspect: function () {\n      return representation;\n    }\n  };\n  if (util.inspect.custom) {\n    ret[util.inspect.custom] = ret.inspect;\n  }\n  return ret;\n}\nfunction map(o) {\n  return format(o, true);\n}\nfunction formatObjectId(x, key) {\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\n}\nfunction formatDate(x, key, shell) {\n  if (shell) {\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\n  } else {\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\n  }\n}\nfunction format(obj, sub, color, shell) {\n  if (obj && typeof obj.toBSON === 'function') {\n    obj = obj.toBSON();\n  }\n  if (obj == null) {\n    return obj;\n  }\n  const clone = require('../../helpers/clone');\n  let x = clone(obj, internalToObjectOptions);\n  const constructorName = getConstructorName(x);\n  if (constructorName === 'Binary') {\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\n  } else if (constructorName === 'ObjectId') {\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\n  } else if (constructorName === 'Date') {\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\n  } else if (constructorName === 'Object') {\n    const keys = Object.keys(x);\n    const numKeys = keys.length;\n    let key;\n    for (let i = 0; i < numKeys; ++i) {\n      key = keys[i];\n      if (x[key]) {\n        let error;\n        if (typeof x[key].toBSON === 'function') {\n          try {\n            // `session.toBSON()` throws an error. This means we throw errors\n            // in debug mode when using transactions, see gh-6712. As a\n            // workaround, catch `toBSON()` errors, try to serialize without\n            // `toBSON()`, and rethrow if serialization still fails.\n            x[key] = x[key].toBSON();\n          } catch (_error) {\n            error = _error;\n          }\n        }\n        const _constructorName = getConstructorName(x[key]);\n        if (_constructorName === 'Binary') {\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' + x[key].buffer.toString('base64') + '\")';\n        } else if (_constructorName === 'Object') {\n          x[key] = format(x[key], true);\n        } else if (_constructorName === 'ObjectId') {\n          formatObjectId(x, key);\n        } else if (_constructorName === 'Date') {\n          formatDate(x, key, shell);\n        } else if (_constructorName === 'ClientSession') {\n          x[key] = inspectable('ClientSession(\"' + (x[key] && x[key].id && x[key].id.id && x[key].id.id.buffer || '').toString('hex') + '\")');\n        } else if (Array.isArray(x[key])) {\n          x[key] = x[key].map(map);\n        } else if (error != null) {\n          // If there was an error with `toBSON()` and the object wasn't\n          // already converted to a string representation, rethrow it.\n          // Open to better ideas on how to handle this.\n          throw error;\n        }\n      }\n    }\n  }\n  if (sub) {\n    return x;\n  }\n  return util.inspect(x, false, 10, color).replace(/\\n/g, '').replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * Retrieves information about this collections indexes.\n *\n * @param {Function} callback\n * @method getIndexes\n * @api public\n */\n\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeCollection;","map":{"version":3,"names":["MongooseCollection","require","MongooseError","Collection","ObjectId","getConstructorName","internalToObjectOptions","stream","util","NativeCollection","name","conn","options","collection","Promise","modelName","_closed","apply","arguments","Object","setPrototypeOf","prototype","onOpen","db","call","onClose","force","_getCollection","syncCollectionMethods","watch","find","aggregate","iter","i","args","Array","from","_this","globalDebug","base","debug","connectionDebug","lastArg","length","opId","$wasForceClosed","error","_args","callback","_shouldBufferCommands","buffer","emit","_id","collectionName","method","promise","timeout","addQueue","slice","resolve","reject","collectionOperationCallback","err","res","clearTimeout","concat","bufferTimeoutMS","_getBufferTimeoutMS","setTimeout","removed","removeQueue","message","result","argsToAdd","Writable","$printToStream","color","shell","$print","params","ret","then","key","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","get","undefined","moduleName","functionCall","join","j","$format","unshift","console","info","write","arg","type","format","inspectable","representation","inspect","custom","map","o","formatObjectId","x","toHexString","formatDate","toUTCString","obj","sub","toBSON","clone","constructorName","sub_type","toString","keys","numKeys","_error","_constructorName","id","isArray","replace","getIndexes","indexInformation","module","exports"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js"],"sourcesContent":["'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst MongooseCollection = require('../../collection');\nconst MongooseError = require('../../error/mongooseError');\nconst Collection = require('mongodb').Collection;\nconst ObjectId = require('../../types/objectid');\nconst getConstructorName = require('../../helpers/getConstructorName');\nconst internalToObjectOptions = require('../../options').internalToObjectOptions;\nconst stream = require('stream');\nconst util = require('util');\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation.\n *\n * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management.\n *\n * @inherits Collection https://mongodb.github.io/node-mongodb-native/4.9/classes/Collection.html\n * @api private\n */\n\nfunction NativeCollection(name, conn, options) {\n  this.collection = null;\n  this.Promise = options.Promise || Promise;\n  this.modelName = options.modelName;\n  delete options.modelName;\n  this._closed = false;\n  MongooseCollection.apply(this, arguments);\n}\n\n/*!\n * Inherit from abstract Collection.\n */\n\nObject.setPrototypeOf(NativeCollection.prototype, MongooseCollection.prototype);\n\n/**\n * Called when the connection opens.\n *\n * @api private\n */\n\nNativeCollection.prototype.onOpen = function() {\n  this.collection = this.conn.db.collection(this.name);\n  MongooseCollection.prototype.onOpen.call(this);\n  return this.collection;\n};\n\n/**\n * Called when the connection closes\n *\n * @api private\n */\n\nNativeCollection.prototype.onClose = function(force) {\n  MongooseCollection.prototype.onClose.call(this, force);\n};\n\n/**\n * Helper to get the collection, in case `this.collection` isn't set yet.\n * May happen if `bufferCommands` is false and created the model when\n * Mongoose was disconnected.\n *\n * @api private\n */\n\nNativeCollection.prototype._getCollection = function _getCollection() {\n  if (this.collection) {\n    return this.collection;\n  }\n  if (this.conn.db != null) {\n    this.collection = this.conn.db.collection(this.name);\n    return this.collection;\n  }\n  return null;\n};\n\n/*!\n * ignore\n */\n\nconst syncCollectionMethods = { watch: true, find: true, aggregate: true };\n\n/**\n * Copy the collection methods and make them subject to queues\n * @param {Number|String} I\n * @api private\n */\n\nfunction iter(i) {\n  NativeCollection.prototype[i] = function() {\n    const collection = this._getCollection();\n    const args = Array.from(arguments);\n    const _this = this;\n    const globalDebug = _this &&\n      _this.conn &&\n      _this.conn.base &&\n      _this.conn.base.options &&\n      _this.conn.base.options.debug;\n    const connectionDebug = _this &&\n      _this.conn &&\n      _this.conn.options &&\n      _this.conn.options.debug;\n    const debug = connectionDebug == null ? globalDebug : connectionDebug;\n    const lastArg = arguments[arguments.length - 1];\n    const opId = new ObjectId();\n\n    // If user force closed, queueing will hang forever. See #5664\n    if (this.conn.$wasForceClosed) {\n      const error = new MongooseError('Connection was force closed');\n      if (args.length > 0 &&\n        typeof args[args.length - 1] === 'function') {\n        args[args.length - 1](error);\n        return;\n      } else {\n        throw error;\n      }\n    }\n\n    let _args = args;\n    let callback = null;\n    if (this._shouldBufferCommands() && this.buffer) {\n      this.conn.emit('buffer', {\n        _id: opId,\n        modelName: _this.modelName,\n        collectionName: _this.name,\n        method: i,\n        args: args\n      });\n\n      let callback;\n      let _args = args;\n      let promise = null;\n      let timeout = null;\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(() => {\n          lastArg.call(this, null, this[i].apply(this, _args.slice(0, _args.length - 1)));\n        }, []);\n      } else if (syncCollectionMethods[i]) {\n        promise = new Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      } else if (typeof lastArg === 'function') {\n        callback = function collectionOperationCallback() {\n          if (timeout != null) {\n            clearTimeout(timeout);\n          }\n          return lastArg.apply(this, arguments);\n        };\n        _args = args.slice(0, args.length - 1).concat([callback]);\n      } else {\n        promise = new Promise((resolve, reject) => {\n          callback = function collectionOperationCallback(err, res) {\n            if (timeout != null) {\n              clearTimeout(timeout);\n            }\n            if (err != null) {\n              return reject(err);\n            }\n            resolve(res);\n          };\n          _args = args.concat([callback]);\n          this.addQueue(i, _args);\n        });\n      }\n\n      const bufferTimeoutMS = this._getBufferTimeoutMS();\n      timeout = setTimeout(() => {\n        const removed = this.removeQueue(i, _args);\n        if (removed) {\n          const message = 'Operation `' + this.name + '.' + i + '()` buffering timed out after ' +\n            bufferTimeoutMS + 'ms';\n          const err = new MongooseError(message);\n          this.conn.emit('buffer-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\n          callback(err);\n        }\n      }, bufferTimeoutMS);\n\n      if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n        this.addQueue(i, _args);\n        return;\n      }\n\n      return promise;\n    } else if (!syncCollectionMethods[i] && typeof lastArg === 'function') {\n      callback = function collectionOperationCallback(err, res) {\n        if (err != null) {\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, error: err });\n        } else {\n          _this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: _this.name, method: i, result: res });\n        }\n        return lastArg.apply(this, arguments);\n      };\n      _args = args.slice(0, args.length - 1).concat([callback]);\n    }\n\n    if (debug) {\n      if (typeof debug === 'function') {\n        let argsToAdd = null;\n        if (typeof args[args.length - 1] == 'function') {\n          argsToAdd = args.slice(0, args.length - 1);\n        } else {\n          argsToAdd = args;\n        }\n        debug.apply(_this,\n          [_this.name, i].concat(argsToAdd));\n      } else if (debug instanceof stream.Writable) {\n        this.$printToStream(_this.name, i, args, debug);\n      } else {\n        const color = debug.color == null ? true : debug.color;\n        const shell = debug.shell == null ? false : debug.shell;\n        this.$print(_this.name, i, args, color, shell);\n      }\n    }\n\n    this.conn.emit('operation-start', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, params: _args });\n\n    try {\n      if (collection == null) {\n        const message = 'Cannot call `' + this.name + '.' + i + '()` before initial connection ' +\n          'is complete if `bufferCommands = false`. Make sure you `await mongoose.connect()` if ' +\n          'you have `bufferCommands = false`.';\n        throw new MongooseError(message);\n      }\n\n      if (syncCollectionMethods[i] && typeof lastArg === 'function') {\n        const ret = collection[i].apply(collection, _args.slice(0, _args.length - 1));\n        return lastArg.call(this, null, ret);\n      }\n\n      const ret = collection[i].apply(collection, _args);\n      if (ret != null && typeof ret.then === 'function') {\n        return ret.then(\n          res => {\n            typeof lastArg === 'function' && lastArg(null, res);\n            return res;\n          },\n          err => {\n            if (typeof lastArg === 'function') {\n              lastArg(err);\n              return;\n            }\n            throw err;\n          }\n        );\n      }\n      return ret;\n    } catch (error) {\n      // Collection operation may throw because of max bson size, catch it here\n      // See gh-3906\n      if (typeof lastArg === 'function') {\n        return lastArg(error);\n      } else {\n        this.conn.emit('operation-end', { _id: opId, modelName: _this.modelName, collectionName: this.name, method: i, error: error });\n\n        throw error;\n      }\n    }\n  };\n}\n\nfor (const key of Object.getOwnPropertyNames(Collection.prototype)) {\n  // Janky hack to work around gh-3005 until we can get rid of the mongoose\n  // collection abstraction\n  const descriptor = Object.getOwnPropertyDescriptor(Collection.prototype, key);\n  // Skip properties with getters because they may throw errors (gh-8528)\n  if (descriptor.get !== undefined) {\n    continue;\n  }\n  if (typeof Collection.prototype[key] !== 'function') {\n    continue;\n  }\n\n  iter(key);\n}\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$print = function(name, i, args, color, shell) {\n  const moduleName = color ? '\\x1B[0;36mMongoose:\\x1B[0m ' : 'Mongoose: ';\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j], color, shell));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n\n  console.info(moduleName + functionCall + params);\n};\n\n/**\n * Debug print helper\n *\n * @api public\n * @method $print\n */\n\nNativeCollection.prototype.$printToStream = function(name, i, args, stream) {\n  const functionCall = [name, i].join('.');\n  const _args = [];\n  for (let j = args.length - 1; j >= 0; --j) {\n    if (this.$format(args[j]) || _args.length) {\n      _args.unshift(this.$format(args[j]));\n    }\n  }\n  const params = '(' + _args.join(', ') + ')';\n\n  stream.write(functionCall + params, 'utf8');\n};\n\n/**\n * Formatter for debug print args\n *\n * @api public\n * @method $format\n */\n\nNativeCollection.prototype.$format = function(arg, color, shell) {\n  const type = typeof arg;\n  if (type === 'function' || type === 'undefined') return '';\n  return format(arg, false, color, shell);\n};\n\n/**\n * Debug print helper\n * @param {Any} representation\n * @api private\n */\n\nfunction inspectable(representation) {\n  const ret = {\n    inspect: function() { return representation; }\n  };\n  if (util.inspect.custom) {\n    ret[util.inspect.custom] = ret.inspect;\n  }\n  return ret;\n}\nfunction map(o) {\n  return format(o, true);\n}\nfunction formatObjectId(x, key) {\n  x[key] = inspectable('ObjectId(\"' + x[key].toHexString() + '\")');\n}\nfunction formatDate(x, key, shell) {\n  if (shell) {\n    x[key] = inspectable('ISODate(\"' + x[key].toUTCString() + '\")');\n  } else {\n    x[key] = inspectable('new Date(\"' + x[key].toUTCString() + '\")');\n  }\n}\nfunction format(obj, sub, color, shell) {\n  if (obj && typeof obj.toBSON === 'function') {\n    obj = obj.toBSON();\n  }\n  if (obj == null) {\n    return obj;\n  }\n\n  const clone = require('../../helpers/clone');\n  let x = clone(obj, internalToObjectOptions);\n  const constructorName = getConstructorName(x);\n\n  if (constructorName === 'Binary') {\n    x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';\n  } else if (constructorName === 'ObjectId') {\n    x = inspectable('ObjectId(\"' + x.toHexString() + '\")');\n  } else if (constructorName === 'Date') {\n    x = inspectable('new Date(\"' + x.toUTCString() + '\")');\n  } else if (constructorName === 'Object') {\n    const keys = Object.keys(x);\n    const numKeys = keys.length;\n    let key;\n    for (let i = 0; i < numKeys; ++i) {\n      key = keys[i];\n      if (x[key]) {\n        let error;\n        if (typeof x[key].toBSON === 'function') {\n          try {\n            // `session.toBSON()` throws an error. This means we throw errors\n            // in debug mode when using transactions, see gh-6712. As a\n            // workaround, catch `toBSON()` errors, try to serialize without\n            // `toBSON()`, and rethrow if serialization still fails.\n            x[key] = x[key].toBSON();\n          } catch (_error) {\n            error = _error;\n          }\n        }\n        const _constructorName = getConstructorName(x[key]);\n        if (_constructorName === 'Binary') {\n          x[key] = 'BinData(' + x[key].sub_type + ', \"' +\n            x[key].buffer.toString('base64') + '\")';\n        } else if (_constructorName === 'Object') {\n          x[key] = format(x[key], true);\n        } else if (_constructorName === 'ObjectId') {\n          formatObjectId(x, key);\n        } else if (_constructorName === 'Date') {\n          formatDate(x, key, shell);\n        } else if (_constructorName === 'ClientSession') {\n          x[key] = inspectable('ClientSession(\"' +\n            (\n              x[key] &&\n              x[key].id &&\n              x[key].id.id &&\n              x[key].id.id.buffer || ''\n            ).toString('hex') + '\")');\n        } else if (Array.isArray(x[key])) {\n          x[key] = x[key].map(map);\n        } else if (error != null) {\n          // If there was an error with `toBSON()` and the object wasn't\n          // already converted to a string representation, rethrow it.\n          // Open to better ideas on how to handle this.\n          throw error;\n        }\n      }\n    }\n  }\n  if (sub) {\n    return x;\n  }\n\n  return util.\n    inspect(x, false, 10, color).\n    replace(/\\n/g, '').\n    replace(/\\s{2,}/g, ' ');\n}\n\n/**\n * Retrieves information about this collections indexes.\n *\n * @param {Function} callback\n * @method getIndexes\n * @api public\n */\n\nNativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeCollection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}