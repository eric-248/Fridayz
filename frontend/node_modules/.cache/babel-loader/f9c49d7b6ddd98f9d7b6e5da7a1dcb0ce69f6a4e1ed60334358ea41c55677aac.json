{"ast":null,"code":"'use strict';\n\n/**\n * Find the deepest subdocument along a given path to ensure setter functions run\n * with the correct subdocument as `this`. If no subdocuments, returns the top-level\n * document.\n *\n * @param {Document} doc\n * @param {String[]} parts\n * @param {Schema} schema\n * @returns Document\n */\nmodule.exports = function getDeepestSubdocumentForPath(doc, parts, schema) {\n  let curPath = parts[0];\n  let curSchema = schema;\n  let subdoc = doc;\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const curSchemaType = curSchema.path(curPath);\n    if (curSchemaType && curSchemaType.schema) {\n      let newSubdoc = subdoc.get(curPath);\n      curSchema = curSchemaType.schema;\n      curPath = parts[i + 1];\n      if (Array.isArray(newSubdoc) && !isNaN(curPath)) {\n        newSubdoc = newSubdoc[curPath];\n        curPath = '';\n      }\n      if (newSubdoc == null) {\n        break;\n      }\n      subdoc = newSubdoc;\n    } else {\n      curPath += curPath.length ? '.' + parts[i + 1] : parts[i + 1];\n    }\n  }\n  return subdoc;\n};","map":{"version":3,"names":["module","exports","getDeepestSubdocumentForPath","doc","parts","schema","curPath","curSchema","subdoc","i","length","curSchemaType","path","newSubdoc","get","Array","isArray","isNaN"],"sources":["C:/Users/lrmir/OneDrive/Desktop/cs35L/newFridayz/Fridayz/frontend/node_modules/mongoose/lib/helpers/document/getDeepestSubdocumentForPath.js"],"sourcesContent":["'use strict';\n\n/**\n * Find the deepest subdocument along a given path to ensure setter functions run\n * with the correct subdocument as `this`. If no subdocuments, returns the top-level\n * document.\n *\n * @param {Document} doc\n * @param {String[]} parts\n * @param {Schema} schema\n * @returns Document\n */\n\nmodule.exports = function getDeepestSubdocumentForPath(doc, parts, schema) {\n  let curPath = parts[0];\n  let curSchema = schema;\n  let subdoc = doc;\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const curSchemaType = curSchema.path(curPath);\n    if (curSchemaType && curSchemaType.schema) {\n      let newSubdoc = subdoc.get(curPath);\n      curSchema = curSchemaType.schema;\n      curPath = parts[i + 1];\n      if (Array.isArray(newSubdoc) && !isNaN(curPath)) {\n        newSubdoc = newSubdoc[curPath];\n        curPath = '';\n      }\n      if (newSubdoc == null) {\n        break;\n      }\n      subdoc = newSubdoc;\n    } else {\n      curPath += curPath.length ? '.' + parts[i + 1] : parts[i + 1];\n    }\n  }\n\n  return subdoc;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,4BAA4BA,CAACC,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACzE,IAAIC,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC;EACtB,IAAIG,SAAS,GAAGF,MAAM;EACtB,IAAIG,MAAM,GAAGL,GAAG;EAChB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE,EAAED,CAAC,EAAE;IACzC,MAAME,aAAa,GAAGJ,SAAS,CAACK,IAAI,CAACN,OAAO,CAAC;IAC7C,IAAIK,aAAa,IAAIA,aAAa,CAACN,MAAM,EAAE;MACzC,IAAIQ,SAAS,GAAGL,MAAM,CAACM,GAAG,CAACR,OAAO,CAAC;MACnCC,SAAS,GAAGI,aAAa,CAACN,MAAM;MAChCC,OAAO,GAAGF,KAAK,CAACK,CAAC,GAAG,CAAC,CAAC;MACtB,IAAIM,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,IAAI,CAACI,KAAK,CAACX,OAAO,CAAC,EAAE;QAC/CO,SAAS,GAAGA,SAAS,CAACP,OAAO,CAAC;QAC9BA,OAAO,GAAG,EAAE;MACd;MACA,IAAIO,SAAS,IAAI,IAAI,EAAE;QACrB;MACF;MACAL,MAAM,GAAGK,SAAS;IACpB,CAAC,MAAM;MACLP,OAAO,IAAIA,OAAO,CAACI,MAAM,GAAG,GAAG,GAAGN,KAAK,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGL,KAAK,CAACK,CAAC,GAAG,CAAC,CAAC;IAC/D;EACF;EAEA,OAAOD,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}